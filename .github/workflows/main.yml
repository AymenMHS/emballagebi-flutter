name: Build Flutter APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /usr/local/share/android-sdk

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Pub
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}

      - name: Setup Java (Temurin 17)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.6'

      - name: Install Android command-line tools and SDK components
        # Télécharge et installe cmdline-tools (sdkmanager), puis installe platform-tools, platforms, build-tools
        run: |
          set -e
          echo "Creating Android SDK root at $ANDROID_SDK_ROOT"
          sudo mkdir -p $ANDROID_SDK_ROOT
          sudo chown $USER:$USER $ANDROID_SDK_ROOT

          echo "Downloading Android command line tools..."
          # NOTE: si ce lien casse dans le futur, remplace par la version la plus récente disponible sur developer.android.com
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O /tmp/cmdline-tools.zip

          echo "Unzipping to $ANDROID_SDK_ROOT/cmdline-tools"
          sudo unzip -q /tmp/cmdline-tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
          # normaliser le dossier en "latest"
          if [ -d "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" ]; then
            sudo mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest || true
          fi

          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
          which sdkmanager || { echo "sdkmanager not found after install"; exit 1; }

          echo "Updating SDK manager and installing components..."
          # Mettre à jour les composants (non interactif)
          yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT --install "platform-tools" "platforms;android-33" "build-tools;33.0.2" "cmdline-tools;latest"

          echo "Accepting licenses..."
          # Accept licenses (si 'yes' n'existe pas, use printf)
          if command -v yes >/dev/null 2>&1; then
            yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
          else
            # envoyer plusieurs 'y'
            printf '%s\n' y y y y y | sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
          fi

        env:
          ANDROID_SDK_ROOT: /usr/local/share/android-sdk
          PATH: /usr/local/share/android-sdk/cmdline-tools/latest/bin:${{ env.PATH }}

      - name: Flutter pub get
        run: flutter pub get

      - name: Build debug APK
        run: flutter build apk --debug --no-shrink

      - name: Build release APK (unsigned)
        run: flutter build apk --release --no-shrink

      - name: Upload artifacts (debug & release)
        uses: actions/upload-artifact@v4
        with:
          name: flutter-apks
          path: |
            build/app/outputs/flutter-apk/app-debug.apk
            build/app/outputs/flutter-apk/app-release.apk

# Optional signing block commented out - enable and configure secrets if you want signed APKs
# (ANDROID_KEYSTORE = base64 keystore, KEYSTORE_PASSWORD, KEY_ALIAS, KEY_PASSWORD)
