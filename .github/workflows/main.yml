name: Build Flutter APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest

    # Définit le SDK Android dans le home du runner pour éviter sudo
    env:
      ANDROID_SDK_ROOT: ${{ runner.home }}/Android/Sdk

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Pub
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}

      - name: Setup Java (Temurin 17)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.6'

      - name: Install Android command-line tools and SDK components (no sudo)
        run: |
          set -e

          echo "ANDROID_SDK_ROOT = $ANDROID_SDK_ROOT"
          mkdir -p "$ANDROID_SDK_ROOT"
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"

          echo "Downloading Android command line tools..."
          curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -o /tmp/cmdline-tools.zip

          echo "Unzipping to $ANDROID_SDK_ROOT/cmdline-tools"
          unzip -q /tmp/cmdline-tools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"

          # Normaliser vers "latest"
          if [ -d "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" ]; then
            mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest" || true
          else
            mv "$ANDROID_SDK_ROOT/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest" 2>/dev/null || true
          fi

          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH"

          if ! command -v sdkmanager >/dev/null 2>&1; then
            echo "Erreur: sdkmanager introuvable après installation"
            ls -la "$ANDROID_SDK_ROOT/cmdline-tools"
            exit 1
          fi

          echo "Installing platform-tools, platforms and build-tools..."
          printf '%s\n' y | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" "platform-tools" "platforms;android-33" "build-tools;33.0.2" "cmdline-tools;latest"

          echo "Accepting licenses..."
          printf '%s\n' y y y y y | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" --licenses

          # Persist environment for the following steps in the workflow
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH

        env:
          ANDROID_SDK_ROOT: ${{ runner.home }}/Android/Sdk

      - name: Flutter pub get
        run: flutter pub get

      - name: Build debug APK
        run: flutter build apk --debug --no-shrink

      - name: Build release APK (unsigned)
        run: flutter build apk --release --no-shrink

      - name: Upload artifacts (debug & release)
        uses: actions/upload-artifact@v4
        with:
          name: flutter-apks
          path: |
            build/app/outputs/flutter-apk/app-debug.apk
            build/app/outputs/flutter-apk/app-release.apk
